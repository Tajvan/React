{"ast":null,"code":"var _jsxFileName = \"/Users/kseniia/Desktop/Code/4 block/React/src/WeekWeather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport \"./WeekWeatherStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeekWeather(props) {\n  _s();\n  console.log(response.data.daily);\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  function SearchWeekWeather(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weekWeather\",\n      children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n        data: forecast[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } else {\n    let key = \"f3009e4852fa0a079dab291dabf020c4\";\n    let lat = props.coords.latitude;\n    let lon = props.coords.longitude;\n    let units = \"metric\";\n    let url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${key}&units=${units}`;\n    axios.get(url).then(SearchWeekWeather);\n    return null;\n  }\n}\n_s(WeekWeather, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n_c = WeekWeather;\nvar _c;\n$RefreshReg$(_c, \"WeekWeather\");","map":{"version":3,"names":["React","useState","axios","WeatherForecastDay","WeekWeather","props","console","log","response","data","daily","loaded","setLoaded","forecast","setForecast","SearchWeekWeather","key","lat","coords","latitude","lon","longitude","units","url","get","then"],"sources":["/Users/kseniia/Desktop/Code/4 block/React/src/WeekWeather.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport \"./WeekWeatherStyle.css\";\n\n\nexport default function WeekWeather(props) {\n  console.log(response.data.daily);\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  function SearchWeekWeather(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"weekWeather\">\n        <WeatherForecastDay data={forecast[0]} />\n        \n      </div>\n    );\n  } else {\n    let key = \"f3009e4852fa0a079dab291dabf020c4\";\n    let lat = props.coords.latitude;\n    let lon = props.coords.longitude;\n    let units = \"metric\";\n    let url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${key}&units=${units}`;\n    axios.get(url).then(SearchWeekWeather);\n\n    return null;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAO,wBAAwB;AAAC;AAGhC,eAAe,SAASC,WAAW,CAACC,KAAK,EAAE;EAAA;EACzCC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;EAChC,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACzC,IAAI,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5C,SAASc,iBAAiB,CAACP,QAAQ,EAAE;IACnCM,WAAW,CAACN,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;IAChCE,SAAS,CAAC,IAAI,CAAC;EACjB;EAEA,IAAID,MAAM,EAAE;IACV,oBACE;MAAK,SAAS,EAAC,aAAa;MAAA,uBAC1B,QAAC,kBAAkB;QAAC,IAAI,EAAEE,QAAQ,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAErC;EAEV,CAAC,MAAM;IACL,IAAIG,GAAG,GAAG,kCAAkC;IAC5C,IAAIC,GAAG,GAAGZ,KAAK,CAACa,MAAM,CAACC,QAAQ;IAC/B,IAAIC,GAAG,GAAGf,KAAK,CAACa,MAAM,CAACG,SAAS;IAChC,IAAIC,KAAK,GAAG,QAAQ;IACpB,IAAIC,GAAG,GAAI,uDAAsDN,GAAI,QAAOG,GAAI,UAASJ,GAAI,UAASM,KAAM,EAAC;IAC7GpB,KAAK,CAACsB,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAACV,iBAAiB,CAAC;IAEtC,OAAO,IAAI;EACb;AACF;AAAC,GA3BuBX,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}