{"ast":null,"code":"var _jsxFileName = \"/Users/kseniia/Desktop/Code/4 block/React/src/WeatherTemperature.js\",\n  _s = $RefreshSig$();\nimport React, { useSyncExternalStore } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherTemperature(props) {\n  _s();\n  const [unit, setUmit] = useState(\"celsius\");\n  if (unit === \"celsius\") {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"temperature\",\n        children: Math.round(props.celsius)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unitsCelsia\",\n        children: \"\\xB0C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"stick\",\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unitsFarenheit\",\n        children: \"\\xB0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  } else {\n    reru;\n  }\n}\n_s(WeatherTemperature, \"d2jnqGFyqKqcNeaCyUS50fM1H10=\");\n_c = WeatherTemperature;\nvar _c;\n$RefreshReg$(_c, \"WeatherTemperature\");","map":{"version":3,"names":["React","useSyncExternalStore","WeatherTemperature","props","unit","setUmit","useState","Math","round","celsius","reru"],"sources":["/Users/kseniia/Desktop/Code/4 block/React/src/WeatherTemperature.js"],"sourcesContent":["import React, { useSyncExternalStore } from \"react\";\n\nexport default function WeatherTemperature(props) {\n  const [unit, setUmit] = useState(\"celsius\");\n  if (unit === \"celsius\") {\n    return (\n      <span>\n        <h4 className=\"temperature\">{Math.round(props.celsius)}</h4>\n        <span className=\"unitsCelsia\">°C</span>\n        <span className=\"stick\">|</span>\n        <span className=\"unitsFarenheit\">°F</span>\n      </span>\n    );\n  } else {\n    reru\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,oBAAoB,QAAQ,OAAO;AAAC;AAEpD,eAAe,SAASC,kBAAkB,CAACC,KAAK,EAAE;EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,SAAS,CAAC;EAC3C,IAAIF,IAAI,KAAK,SAAS,EAAE;IACtB,oBACE;MAAA,wBACE;QAAI,SAAS,EAAC,aAAa;QAAA,UAAEG,IAAI,CAACC,KAAK,CAACL,KAAK,CAACM,OAAO;MAAC;QAAA;QAAA;QAAA;MAAA,QAAM,eAC5D;QAAM,SAAS,EAAC,aAAa;QAAA,UAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO,eACvC;QAAM,SAAS,EAAC,OAAO;QAAA,UAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAO,eAChC;QAAM,SAAS,EAAC,gBAAgB;QAAA,UAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACrC;EAEX,CAAC,MAAM;IACLC,IAAI;EACN;AACF;AAAC,GAduBR,kBAAkB;AAAA,KAAlBA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}